--------------------------------
---- mp3 stuff
--------------------------------

rename 's/[ ]+/_/g' * && \
ls | grep -v mp3 | xargs -P 2 -I {} ffmpeg -i '{}' -b:a 256k {}.mp3 && \
rename s/.mp4// *.mp3 && \
ls *.mp3 | sed s/'_-_.*'//  | awk '{ print "mkdir -p ~/Music/" $0 }' | xargs -I {} bash -c -x {} && \
tags-from-filename . 1 && \
paste <(ls *.mp3) <(ls *.mp3 | sed s/'_-_.*'//  | awk '{ print "~/Music/" $0 }' ) | xargs -I {} bash -c "cp -fv "{}


path=~/Music/Kina_Grannis/Kina_Grannis_-_New_Slang.mp3 && \
t=157 && \
name=`basename $path` && \
cp -v $path /tmp/ && \
ffmpeg -i /tmp/$name -t $t -acodec copy $path

--------------------------------

chrome - flash video downloader
http://www.fvddownloader.com/

--------------------------------
ssh
--------------------------------

ssh-keygen -t rsa -b 4096 -C email

--------------------------------
clojure
--------------------------------
leiningen

sudo curl -o /usr/local/bin/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
sudo chmod a+x /usr/local/bin/lein


~/.lein/profiles.clj

{ :user
 {
  :plugins [[lein-try "0.4.3"]]
  :repositories [["clojars" "http://clojars.org/repo"]]
  }
 }

--------------------------------
haskell
--------------------------------

git clone https://github.com/ellchow/haskell-mode.git
cd haskell-mode
git co v13.10-ellchow
make EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs all ## path to your emacs

cd ~/git/dotemacs/elisp
mkdir haskell-mode
cd haskell-mode
cp ~/git/haskell-mode/*.el .

brew install haskell-platform
cabal update
cabal install hlint hoogle

cabal install regex-tdfa



https://github.com/serras/emacs-haskell-tutorial/blob/master/tutorial.md

--------------------------------
elm
--------------------------------
brew install node
http://elm-lang.org/install


-------------------------------
convert flac
-------------------------------

## cleanup file names first
rename s/"[^A-Za-z0-9-.]+"/'_'/g *.flac
## convert
ls *.flac | xargs -P 4 -I {} ffmpeg -i {} -c:a alac {}.m4a

--------------------------------
---- mp3 stuff
--------------------------------

ls | grep -v mp3 | xargs -P 2 -I {} ffmpeg -i '{}' -b:a 192k {}.mp3

rename s/.mp4// *.mp3

ls *.mp3 | sed s/'_-_.*'//  | awk '{ print "mkdir -p ~/Music/" $0 }' | xargs -I {} bash -c -x {}

tags-from-filename . 1

paste <(ls *.mp3) <(ls *.mp3 | sed s/'_-_.*'//  | awk '{ print "~/Music/" $0 }' ) | xargs -I {} bash -c "cp -fv "{}


---------------------------------
---- R docker
--------------------------------
docker for mac

brew cask install xquartz

run xquartz, set security to allow network connections/clients


docker run -a stdin -a stdout -i -t rocker/verse R


IP=$(ifconfig en0 | grep inet | awk '$1=="inet" {print $2}')
xhost + $IP

R_DOCKER_START_CMD="docker run -a stdin -a stdout -e DISPLAY=$IP:0 -v /tmp/.X11-unix:/tmp/.X11-unix -e HOME=/home/`whoami` -e R_HISTFILE=/home/`whoami`/.Rhistory -v $HOME:/home/`whoami` -i -t my-r R --no-save"
alias R=$R_DOCKER_START_CMD




## ~/.Rprofile
cat(date(),'\n', file = stderr())
options(scipen=100)

if (interactive()) {
  .First <- function() try(utils::loadhistory("~/.Rhistory"))
  .Last <- function() try(utils::savehistory("~/.Rhistory"))
}
